server:
  port: 8080

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      server:
        webflux:
          default-filters:
            - AddRequestHeader=X-Request-Gateway, PI-Gateway
          routes:
            - id: user-service
              uri: lb://user-service
              predicates:
                - Path=/users/**
              filters:
                - name: CircuitBreaker
                  args:
                    name: userCircuitBreaker
                    fallbackUri: forward:/fallback/user
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter.replenishRate: 5
                    redis-rate-limiter.burstCapacity: 10
                    key-resolver: "#{@userKeyResolver}"

            - id: order-service
              uri: lb://order-service
              predicates:
                - Path=/orders/**
              filters:
                - name: CircuitBreaker
                  args:
                    name: orderCircuitBreaker
                    fallbackUri: forward:/fallback/order
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter.replenishRate: 5
                    redis-rate-limiter.burstCapacity: 10
                    key-resolver: "#{@userKeyResolver}"

        filter:
          request-rate-limiter:
            enabled: true
            redis:
              enabled: false

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: health,info

logging:
  level:
    org.springframework.cloud.gateway: DEBUG